name: Check Temperature

on:
  push:
    branches:
      - main  
  workflow_dispatch: {}  # Add workflow dispatch for manual triggering
  schedule:
    - cron: '54 9 * * *'   # 09:00 (UTC) daily
    - cron: '54 12 * * *'   # 12:00 (UTC) daily
    - cron: '54 17 * * *'   # 17:00 (UTC) daily

jobs:
  Check-Temperature:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
          
      - name: Install Chromedriver and Chrome
        run: |
          sudo apt-get update
          sudo apt-get install -y wget unzip gnupg libnss3 libxss1 libgtk-3-0 libatk-bridge2.0-0 libatk1.0-0 libx11-xcb1 --no-install-recommends
      
          CHROME_VERSION="140.0.7339.80"
          wget -O /tmp/chrome-linux64.zip "https://storage.googleapis.com/chrome-for-testing-public/140.0.7339.80/linux64/chrome-linux64.zip"
          sudo unzip -o /tmp/chrome-linux64.zip -d /opt/google/chrome/
          sudo ln -sf /opt/google/chrome/chrome /usr/bin/google-chrome
          google-chrome --version
      
          echo "Installing ChromeDriver version 140.0.7339.80"
          wget -O /tmp/chromedriver.zip "https://storage.googleapis.com/chrome-for-testing-public/140.0.7339.80/linux64/chromedriver-linux64.zip"
      
          # extract only the chromedriver binary from the nested folder into /usr/local/bin
          sudo unzip -j /tmp/chromedriver.zip 'chromedriver-linux64/chromedriver' -d /usr/local/bin/
          sudo chmod +x /usr/local/bin/chromedriver
      
          echo "Installed ChromeDriver version:"
          /usr/local/bin/chromedriver --version
    
      - name: Install dependencies
        run: |
          git config user.email "luckyodi310@gmail.com"
          git config user.name "Nnamdi Odi"
          python -m pip install --upgrade pip
          python -m pip install "dask[distributed]" --upgrade
          pip install -r requirements.txt

      - name: Run Scrapper
        env:
          API_TOKEN: ${{ secrets.API_TOKEN }}
          USER: ${{ secrets.USER }}
          PASSWORD_: ${{ secrets.PASSWORD_ }}
          RECEIVER_EMAIL: ${{ secrets.RECEIVER_EMAIL }}
          MY_EMAIL: ${{ secrets.MY_EMAIL }}
          EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}

        run: |
          python test.py          

      - name: Check for changes
        id: check_changes
        run: |
          git diff --exit-code || echo "::set-output name=changes::true"

      - name: Commit and Push Changes
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git pull
          git add .
          git commit -m "Scraped emails"
          git remote set-url origin https://$API_TOKEN@github.com/nnamdiindu/OLT_Temperature_Update.git
          git push
